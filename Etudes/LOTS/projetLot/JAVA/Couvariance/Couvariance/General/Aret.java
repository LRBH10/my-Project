package General;abstract public class Aret {	//	// Fields	//	String name;	Sommet sommet1;	Sommet sommet2;	Graphe graphe;	public Aret(String name) {		this.name = name;	};	//	// Methods	//	//	// Accessor methods	//	//	// Other methods	//	/**	 * @return boolean	 * @param graphe	 */	abstract public boolean compatibleGraphe(General.Graphe graphe);	/**	 * @return boolean	 * @param sommet	 */	abstract public boolean compatibleSommet(General.Sommet sommet);	/**	 * @return boolean	 * @param graphe	 */	public String setGraphe(General.Graphe graphe) {		if (this.compatibleGraphe(graphe) && graphe.compatibleAret(this)				&& this.IsGrapheNull() && sommet1 != null) {			this.graphe = graphe;			graphe.arets.add(this);			return "OK \n " + this + "\n----------\n";		}		return "Non OK \n" + this + "\n" + graphe + "\n----------\n";	}	/**	 * @return boolean	 * @param sommet1	 * @param sommet2	 */	public String insererSommets(General.Sommet sommet1, General.Sommet sommet2) {		if (VerifyinsererSommet(sommet1) && VerifyinsererSommet(sommet2)				&& sommet1 != sommet2 && sommet1.graphe==sommet2.graphe) {			this.sommet1 = sommet1;			this.sommet2 = sommet2;			sommet1.insererAret(this);			sommet2.insererAret(this);			if(sommet1.graphe!=null) setGraphe(sommet1.graphe);			return "OK \n " + this + "\n----------\n";		}		return "Non OK \n" + this + "\n" + sommet1 + "\n" + sommet2				+ "\n----------\n";	}	/**	 * @return boolean	 */	public boolean IsGrapheNull() {		return (graphe == null);	}	/**	 * @return boolean	 * @param sommet1	 */	boolean VerifyinsererSommet(General.Sommet sommet) {		if (this.compatibleSommet(sommet) && sommet.compatibleAret(this))			return true;		return false;	}	public Graphe getGraphe() {		return graphe;	}	@Override	public String toString() {		// TODO Auto-generated method stub		if (this.graphe == null && this.sommet1 == null && this.sommet2 == null)			return "Who : " + name + " -> Type : " + getClass().getName()					+ " -> pere : null -> Pas de Sommet";		else if (this.sommet1 == null && this.sommet2 == null)			return "Who : " + name + " -> Type : " + getClass().getName()					+ " -> pere : " + graphe.name + " -> Pas de Sommet";		else if (this.graphe == null)			return "Who : " + name + " -> Type : " + getClass().getName()					+ " -> pere : null -> (" + sommet1.name + ","					+ sommet2.name + ")";		else			return "Who : " + name + " -> Type : " + getClass().getName()					+ " -> pere : " + graphe.name + " -> ("					+ sommet1.name + "," + sommet2.name + ")";	}}