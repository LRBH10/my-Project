package clients;


import Special.ClientRMI;
import Special.EspeceProtegee;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import TPRMIserveur.Animals;
import TPRMIserveur.ClientAlert;
import TPRMIserveur.Espece;
import java.rmi.AccessException;

import java.rmi.RMISecurityManager;




/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author BIBOUH
 */
public class ClientInterface extends javax.swing.JFrame implements Runnable{

    //Attribue
    ClientRMI cli;
    int lastindexAnimal;
    int lastIndexSuivi;
    int idRegister;
    boolean modifiable =false;
    /**
     * Creates new form ClientInterface
     */
    public ClientInterface() {
        
        initComponents();
        lastindexAnimal = -1;
        lastIndexSuivi  = -1;
        modifierAnimalButton.setVisible(false);
        suiviList.setListData(new Vector<String>());
     	cli=new Special.ClientRMI();
        try {
            Registry registry = LocateRegistry.getRegistry();
            try {
                cli.setStub((Animals) registry.lookup("Animal"));
                idRegister =cli.getStub().register();
                System.out.println("ID d'enregeistrement est "+idRegister);
                
            } catch (NotBoundException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AccessException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }

            animalList.setListData(cli.getStub().getListAnimals());
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        animalList = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomAnimal = new javax.swing.JTextField();
        maitreNom = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        especeNom = new javax.swing.JTextField();
        ageMoyen = new javax.swing.JSpinner();
        modifierAnimal = new javax.swing.JCheckBox();
        ajouteAnimal = new javax.swing.JButton();
        modifierAnimalButton = new javax.swing.JButton();
        supprimeAnimal = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        suiviList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        SuiviContient = new javax.swing.JTextArea();
        modifierSuivi = new javax.swing.JButton();
        ajouterSuivi = new javax.swing.JButton();
        deleteSuivi = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        testButton = new javax.swing.JButton();
        detailsAnimals = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        animalList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        animalList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                animalListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(animalList);

        jLabel6.setText("List des Animaux");

        jLabel1.setText("Nom");

        jLabel2.setText("Maitre");

        jLabel3.setText("Nom d'espece");

        jLabel4.setText("L'age Moyen");

        ageMoyen.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(especeNom))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ageMoyen, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(especeNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ageMoyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        modifierAnimal.setText("Modifier ( Ã  cocher Obligatoire Si on veux Modifier)");
        modifierAnimal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                modifierAnimalStateChanged(evt);
            }
        });

        ajouteAnimal.setText("Ajouter Animal");
        ajouteAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouteAnimalActionPerformed(evt);
            }
        });

        modifierAnimalButton.setText("Modifier Animal");
        modifierAnimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierAnimalButtonActionPerformed(evt);
            }
        });

        supprimeAnimal.setText("Supprimer Animal");
        supprimeAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimeAnimalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nomAnimal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maitreNom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ajouteAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifierAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modifierAnimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(supprimeAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(maitreNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifierAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ajouteAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supprimeAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modifierAnimalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Ajouter un Animal", jPanel1);

        jLabel5.setText("la List des Suivis");

        suiviList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        suiviList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                suiviListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(suiviList);

        SuiviContient.setColumns(20);
        SuiviContient.setRows(5);
        jScrollPane3.setViewportView(SuiviContient);

        modifierSuivi.setText("Modfier Ce Suivi");
        modifierSuivi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierSuiviActionPerformed(evt);
            }
        });

        ajouterSuivi.setText("Ajouter Ce suivi");
        ajouterSuivi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterSuiviActionPerformed(evt);
            }
        });

        deleteSuivi.setText("Supprimer Ce Suivi");
        deleteSuivi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSuiviActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(modifierSuivi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ajouterSuivi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteSuivi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(modifierSuivi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ajouterSuivi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteSuivi)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Ajouter un Suivi", jPanel3);

        testButton.setText("Tester Espece ProtÃ©gÃ©");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(testButton)
                .addContainerGap(384, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("TEST de 3", jPanel4);

        detailsAnimals.setText("Selectionnner pour voir les details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1)
                    .addComponent(detailsAnimals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(detailsAnimals, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void animalListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_animalListValueChanged
        // TODO add your handling code here:
        if(evt.getValueIsAdjusting())
        {
            if(lastindexAnimal!=evt.getFirstIndex())  lastindexAnimal=evt.getFirstIndex();
            else if(lastindexAnimal!=evt.getLastIndex())  lastindexAnimal=evt.getLastIndex();
            System.out.println(lastindexAnimal);
            try {
                updateFramAnimal(lastindexAnimal);
                updateAnimalModifier();
            } catch (RemoteException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_animalListValueChanged

    private void suiviListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_suiviListValueChanged
        // TODO add your handling code here:
        if(evt.getValueIsAdjusting())
        {
            if(lastIndexSuivi!=evt.getFirstIndex())  lastIndexSuivi=evt.getFirstIndex();
            else if(lastIndexSuivi!=evt.getLastIndex())  lastIndexSuivi=evt.getLastIndex();
            System.out.println(lastIndexSuivi);
            
        try {
            updateFrameList(lastindexAnimal,lastIndexSuivi);
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_suiviListValueChanged

    private void modifierSuiviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierSuiviActionPerformed
        // TODO add your handling code here:
        try {
               Afficher(cli.getStub().setAnimalSuiviContenu(lastindexAnimal, lastIndexSuivi, SuiviContient.getText()));
               updateFramAnimal(lastindexAnimal);
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_modifierSuiviActionPerformed

    private void ajouterSuiviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterSuiviActionPerformed
        // TODO add your handling code here:
          try {
               Afficher(cli.getStub().addAnimalSuivi(lastindexAnimal, SuiviContient.getText()));
               updateFramAnimal(lastindexAnimal);
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_ajouterSuiviActionPerformed

    private void deleteSuiviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSuiviActionPerformed
        // TODO add your handling code here:
        try {
               Afficher(cli.getStub().deleteAnimalSuivi(lastindexAnimal, lastIndexSuivi));
               updateFramAnimal(lastindexAnimal);
               animalList.setListData(cli.getStub().getListAnimals());
            
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_deleteSuiviActionPerformed

    private void ajouteAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouteAnimalActionPerformed
        // TODO add your handling code here:
        if(!nomAnimal.getText().isEmpty() && !maitreNom.getText().isEmpty()
                && !especeNom.getText().isEmpty()){
            try {
                cli.getStub().addAnimal(nomAnimal.getText(), maitreNom.getText(), especeNom.getText(), 
                        Integer.parseInt(ageMoyen.getValue().toString()));
                animalList.setListData(cli.getStub().getListAnimals());
            } catch (RemoteException ex) {
                
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            Afficher ("Tout LES CHAMPS SONT Obligatoire");
        } 
            
    }//GEN-LAST:event_ajouteAnimalActionPerformed

    private void modifierAnimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierAnimalButtonActionPerformed
        try {
            // TODO add your handling code here:
            Afficher(cli.getStub().setAnimalNom(lastindexAnimal, nomAnimal.getText()));
            cli.getStub().setAnimalNomMaitre(lastindexAnimal, maitreNom.getText());
            animalList.setListData(cli.getStub().getListAnimals());
            updateAnimalModifier();
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_modifierAnimalButtonActionPerformed

    private void modifierAnimalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_modifierAnimalStateChanged
        // TODO add your handling code here:
        if(modifiable){
            modifiable=false;
            modifierAnimalButton.setVisible(false);
            ajouteAnimal.setVisible(true);
            supprimeAnimal.setVisible(true);
            especeNom.setEnabled(true);
            ageMoyen.setEnabled(true);
        }
        else{
            modifiable=true;
            modifierAnimalButton.setVisible(true);
            ajouteAnimal.setVisible(false);
            supprimeAnimal.setVisible(false);
            especeNom.setEnabled(false);
            ageMoyen.setEnabled(false);
            try {
                updateAnimalModifier();
            } catch (RemoteException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
    }//GEN-LAST:event_modifierAnimalStateChanged

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        // TODO add your handling code here:
        Espece es=new EspeceProtegee("chien", 0);
        try {
            Afficher(cli.getStub().getDetailEspece(es));
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }//*/
        
    }//GEN-LAST:event_testButtonActionPerformed

    private void supprimeAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimeAnimalActionPerformed
        try {
            // TODO add your handling code here:
            Afficher(cli.getStub().deleteAnimal(lastindexAnimal));
            animalList.setListData(cli.getStub().getListAnimals());
        } catch (RemoteException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_supprimeAnimalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        System.setSecurityManager(new RMISecurityManager());
        
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ClientInterface client;
                client =new ClientInterface();
                client.setSize(1000,500);
                client.setVisible(true);
                new Thread(client).start();
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea SuiviContient;
    private javax.swing.JSpinner ageMoyen;
    private javax.swing.JButton ajouteAnimal;
    private javax.swing.JButton ajouterSuivi;
    private javax.swing.JList animalList;
    private javax.swing.JButton deleteSuivi;
    private javax.swing.JLabel detailsAnimals;
    private javax.swing.JTextField especeNom;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField maitreNom;
    private javax.swing.JCheckBox modifierAnimal;
    private javax.swing.JButton modifierAnimalButton;
    private javax.swing.JButton modifierSuivi;
    private javax.swing.JTextField nomAnimal;
    private javax.swing.JList suiviList;
    private javax.swing.JButton supprimeAnimal;
    private javax.swing.JButton testButton;
    // End of variables declaration//GEN-END:variables

    private void updateFramAnimal(int index) throws RemoteException {
        //MODFIER LA LIST DES SUVI
        suiviList.setListData(cli.getStub().getListSuiviAnimal(lastindexAnimal));
        
        //AFFICHER LES DETAILS
        String details="";
        details+="<html>Nom : "+cli.getStub().getAnimalNom(index);
        details+="<br/>Nom Maitre : "+cli.getStub().getAnimalNomMaitre(index);
        details+="<br/>Espece :"+cli.getStub().getAnimalEspeceNom(index)+"("+cli.getStub().getAnimalEspeceMoyenAge(index) +")</html>";  
        detailsAnimals.setText(details);       
    }

    private void updateFrameList(int indexAnimal, int IndexSuivi) throws RemoteException {
        SuiviContient.setText(cli.getStub().getAnimalSuiviContenu(indexAnimal, IndexSuivi));
    }

    private void Afficher(String str) {
        System.out.println(str);
    }

    private void updateAnimalModifier() throws RemoteException {
        nomAnimal.setText(cli.getStub().getAnimalNom(lastindexAnimal));
        maitreNom.setText(cli.getStub().getAnimalNomMaitre(lastindexAnimal));
        especeNom.setText(cli.getStub().getAnimalEspeceNom(lastindexAnimal));
        ageMoyen.setValue(cli.getStub().getAnimalEspeceMoyenAge(lastindexAnimal));
    }

    @Override
    public void run() {
        while(true)
        {
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                ////////////////
                String alert=cli.getStub().alertClient(idRegister);
                if(!alert.isEmpty())    Afficher(alert);
                //else Afficher("RIEN");
                
            } catch (RemoteException ex) {
                Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }
}
